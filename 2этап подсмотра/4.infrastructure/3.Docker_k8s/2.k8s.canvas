{
	"nodes":[
		{"id":"afbfca2d34b30dad","type":"file","file":"image/k8s_cluster.png","x":-200,"y":-200,"width":400,"height":320},
		{"id":"ea2f3dd830e98c0f","type":"file","file":"image/k8s_master.png","x":-69,"y":-500,"width":138,"height":240},
		{"id":"178a7f1a5cdd8f30","type":"text","text":"API-сервер","x":-376,"y":-761,"width":154,"height":56},
		{"id":"240ddc71db1a28ee","type":"text","text":"- Принимает все REST-запросы от пользователей, контроллеров и других компонентов.\n    \n- Проверяет аутентификацию и авторизацию.\n    \n- Валидирует и записывает объект в etcd.\n    \n- Все компоненты (включая `kubectl`) взаимодействуют с кластером через API-сервер.","x":-896,"y":-890,"width":363,"height":314},
		{"id":"b6031df64848645e","type":"text","text":"etcd","x":184,"y":-761,"width":100,"height":50},
		{"id":"d1f2d6891c92f90c","type":"text","text":"Хранилище состояния кластера (key-value store):\n\n- Сохраняет всю конфигурацию и текущее состояние объектов кластера: pod, namespace'ов, configmap'ов и т. д.\n\n- Очень важно для восстановления — потеря etcd означает потерю состояния кластера.","x":417,"y":-861,"width":445,"height":250},
		{"id":"004cee2a0f18d7ca","type":"text","text":"scheduler","x":26,"y":-761,"width":135,"height":56},
		{"id":"e38ff1b6549f9683","type":"text","text":"controller-manager","x":-205,"y":-761,"width":205,"height":56},
		{"id":"6f6c1f35b3f939ff","type":"text","text":"Решает, на каком Node запускать Pod:\n\n- Смотрит на нераспределённые поды (Pending).\n- Оценивает доступные Worker Node'ы.\n- Учитывает требования: ресурсы, теги, affinity, taints, nodeSelector и пр.\n- Назначает под на подходящий Node (в виде записи в etcd через API-сервер).","x":0,"y":-1160,"width":477,"height":270},
		{"id":"1bf2ef6b7c98524e","type":"text","text":"Запускает контроллеры, поддерживающие целевое состояние:\n\nКонтроллеры — это циклы обратной связи, которые:\n- Поддерживают заданное количество подов (ReplicaSetController).\n- Реагируют на изменения узлов (NodeController).\n- Управляют Namespace'ами, ServiceAccount'ами и др.","x":-566,"y":-1152,"width":535,"height":255},
		{"id":"e2770b9d57d8b93f","type":"file","file":"image/k8s_worker.png","x":-83,"y":200,"width":166,"height":235},
		{"id":"1937366501a2c59d","type":"text","text":"kube-proxy","x":-74,"y":543,"width":149,"height":60},
		{"id":"4b4666eaba5b8d7a","type":"text","text":"Container Runtime","x":120,"y":543,"width":209,"height":60},
		{"id":"221a70f42165f084","type":"text","text":"kubelet","x":-240,"y":543,"width":129,"height":60},
		{"id":"5c829f550f5f1dfd","type":"text","text":"Агент узла, главный связной с API-сервером:\n- Читает \"PodSpec\"’и (описания подов), переданные через API-сервер.\n- Контролирует, чтобы контейнеры, указанные в PodSpec'ах, были запущены и работали.\n- Проверяет состояние подов и репортит обратно в API-сервер.\n- Может запускать контейнеры напрямую через CRI (например, containerd, CRI-O).","x":-920,"y":437,"width":581,"height":275},
		{"id":"fcfef088079848dd","type":"text","text":"Запускает контейнеры по заданию kubelet:\n- kubelet даёт команду: «запусти контейнер с этим образом», а runtime это реализует.\n- Работа происходит через CRI (Container Runtime Interface).","x":420,"y":481,"width":420,"height":185},
		{"id":"2c3786845106da5e","type":"text","text":"Сетевой прокси на узле:\n- Обеспечивает сетевую маршрутизацию и доступ к сервисам внутри кластера.\n- Настраивает iptables или IPVS для перенаправления трафика к подам.\n- Обрабатывает правила, которые создаются через Kubernetes Services (ClusterIP, NodePort, LoadBalancer и т.д.).","x":-277,"y":740,"width":556,"height":297},
		{"id":"bcc00eed4e5f335b","type":"text","text":"Kubernetes — это система оркестрации контейнеров, которая позволяет автоматически управлять развертыванием, масштабированием и работоспособностью контейнерных приложений.\n\n- **Основные функции:**\n    \n    - Оркестрация контейнеров в кластере.\n    - Автоматическое управление состоянием (self-healing).\n    - Балансировка нагрузки.\n    - Автообновление и откаты.\n- **Основные компоненты:**\n    \n    - **Pod**: Минимальная единица развертывания, включающая один или несколько контейнеров.\n    - **Node**: Машина в кластере (виртуальная или физическая).\n    - **Service**: Обеспечивает сетевой доступ к Pod.\n    - **Deployment**: Управляет состоянием Pod (развертывание, обновление, масштабирование).","x":-920,"y":-290,"width":527,"height":500},
		{"id":"48d763999def0db9","type":"file","file":"image/k8s_pod.png","x":306,"y":-240,"width":228,"height":399},
		{"id":"d463f209c64c4fd7","type":"file","file":"image/k8s_pod_ip.png","x":640,"y":-240,"width":583,"height":400},
		{"id":"3c7ef6470ce5e5da","type":"text","text":"API Service - объеденяет в логические группы и даёт сервису постоянный ip для свзяи","x":806,"y":-387,"width":250,"height":147}
	],
	"edges":[
		{"id":"642d3b62870e0197","fromNode":"afbfca2d34b30dad","fromSide":"top","toNode":"ea2f3dd830e98c0f","toSide":"bottom"},
		{"id":"dbb2e68770d5fa22","fromNode":"ea2f3dd830e98c0f","fromSide":"top","toNode":"178a7f1a5cdd8f30","toSide":"bottom"},
		{"id":"a1381696f495a1dc","fromNode":"ea2f3dd830e98c0f","fromSide":"top","toNode":"b6031df64848645e","toSide":"bottom"},
		{"id":"3a27608e4eb2de6a","fromNode":"ea2f3dd830e98c0f","fromSide":"top","toNode":"004cee2a0f18d7ca","toSide":"bottom"},
		{"id":"3d14ef6a5d79fed0","fromNode":"004cee2a0f18d7ca","fromSide":"top","toNode":"6f6c1f35b3f939ff","toSide":"bottom"},
		{"id":"ae4fc8b711c31f78","fromNode":"b6031df64848645e","fromSide":"right","toNode":"d1f2d6891c92f90c","toSide":"left"},
		{"id":"bacb1ebef885cd45","fromNode":"178a7f1a5cdd8f30","fromSide":"left","toNode":"240ddc71db1a28ee","toSide":"right"},
		{"id":"b1cbb4e1f5573692","fromNode":"ea2f3dd830e98c0f","fromSide":"top","toNode":"e38ff1b6549f9683","toSide":"bottom"},
		{"id":"6e089192b94510cc","fromNode":"e38ff1b6549f9683","fromSide":"top","toNode":"1bf2ef6b7c98524e","toSide":"bottom"},
		{"id":"3a5510fa479b35f2","fromNode":"afbfca2d34b30dad","fromSide":"bottom","toNode":"e2770b9d57d8b93f","toSide":"top"},
		{"id":"381f3a8d04077853","fromNode":"e2770b9d57d8b93f","fromSide":"bottom","toNode":"221a70f42165f084","toSide":"top"},
		{"id":"8f845a8bd90a1179","fromNode":"e2770b9d57d8b93f","fromSide":"bottom","toNode":"4b4666eaba5b8d7a","toSide":"top"},
		{"id":"f059011404a1bb26","fromNode":"e2770b9d57d8b93f","fromSide":"bottom","toNode":"1937366501a2c59d","toSide":"top"},
		{"id":"6de64c6086397d28","fromNode":"221a70f42165f084","fromSide":"left","toNode":"5c829f550f5f1dfd","toSide":"right"},
		{"id":"0b44c9f105798811","fromNode":"4b4666eaba5b8d7a","fromSide":"right","toNode":"fcfef088079848dd","toSide":"left"},
		{"id":"dca9422970b0a8e9","fromNode":"1937366501a2c59d","fromSide":"bottom","toNode":"2c3786845106da5e","toSide":"top"},
		{"id":"cc88d9d8ff290244","fromNode":"afbfca2d34b30dad","fromSide":"left","toNode":"bcc00eed4e5f335b","toSide":"right"},
		{"id":"46b838363c03404b","fromNode":"afbfca2d34b30dad","fromSide":"right","toNode":"48d763999def0db9","toSide":"left"},
		{"id":"96abb7eda1700eb3","fromNode":"48d763999def0db9","fromSide":"right","toNode":"d463f209c64c4fd7","toSide":"left"},
		{"id":"8acb73fd4a69a50f","fromNode":"ea2f3dd830e98c0f","fromSide":"right","toNode":"3c7ef6470ce5e5da","toSide":"left"}
	]
}