{
	"nodes":[
		{"id":"a0fe698beb417a32","type":"text","text":"SQL","x":-100,"y":20,"width":109,"height":53},
		{"id":"469832dafe8782a6","type":"text","text":"Транзакции","x":-124,"y":-100,"width":157,"height":50},
		{"id":"f5fb75025667c7c5","type":"text","text":"Предназначены для совершение операции/ряд операций как единое целое и не прерывается другими пользователями базы","x":-169,"y":-560,"width":250,"height":180},
		{"id":"52478aa6d1adabb2","type":"text","text":"Уровни изоляции","x":-573,"y":-500,"width":205,"height":60},
		{"id":"7fd725a8258ecf9e","type":"text","text":"- В каждой клеточки таблицы должны быть только одно значение\n- Не должно быть повторяющихся строк","x":-880,"y":1149,"width":313,"height":165},
		{"id":"c1162d78566f266a","type":"text","text":"- Таблица уже в 1НФ\n- Есть первичный ключ\n- Все атрибуты зависят от первичного ключа целиком, а не от какой-то его части","x":-534,"y":1149,"width":250,"height":240},
		{"id":"574145004b39b13f","type":"text","text":"### **2NF (Вторая нормальная форма)**\n\n**Условия:**\n\n- Таблица уже в 1NF.\n- Каждый неключевой атрибут зависит от всего первичного ключа, а не только от части.\n\n**Пример нарушения:**  \nДля составного ключа (Студент, Курс) поле \"Имя студента\" зависит только от \"Студент\".  \n**Решение:**  \nРазделить таблицу на две: `Студенты` (ID, Имя) и `Курсы студента` (ID студента, Курс).","x":-534,"y":1476,"width":250,"height":632},
		{"id":"4b373b7746565595","type":"text","text":"### **1NF (первая нормальная форма)**\n**Условия:**\n\n- Каждое поле содержит атомарные значения (неделимые).\n- Все строки таблицы уникальны.\n\n**Пример нарушения:**  \nПоле \"телефоны\" содержит список номеров: `+12345, +67890`.  \n**Решение:**  \nСоздать отдельные строки для каждого телефона.","x":-848,"y":1476,"width":250,"height":578},
		{"id":"b74fec7acc5df663","type":"text","text":"### **3NF (Третья нормальная форма)**\n\n**Условия:**\n\n- Таблица уже в 2NF.\n- Неключевые атрибуты зависят **только** от первичного ключа, а не от других неключевых атрибутов.\n\n**Пример нарушения:**  \nТаблица хранит поля: `Код товара`, `Название товара`, `Категория`. Поле `Категория` зависит от `Название товара`.  \n**Решение:**  \nСоздать отдельную таблицу для категорий.","x":-231,"y":1476,"width":250,"height":632},
		{"id":"b4936404c3d29275","type":"text","text":"Вложенные запросы","x":370,"y":184,"width":250,"height":56},
		{"id":"6e1cef2663584c3a","type":"text","text":"MAX - максимальное","x":1004,"y":178,"width":250,"height":60},
		{"id":"54c8a188256e249e","type":"text","text":"GROUP - сгруппировать как","x":1256,"y":180,"width":250,"height":60},
		{"id":"2890409a7a384ded","type":"text","text":"HAVING - фильтр после группировки","x":1506,"y":180,"width":250,"height":60},
		{"id":"9e0f3ad20c6807da","type":"text","text":"AVG - среднее","x":754,"y":180,"width":250,"height":60},
		{"id":"482f41e7e3e39729","type":"file","file":"image/under_query.png","x":295,"y":106,"width":395,"height":34},
		{"id":"5e56bdc14531451d","type":"text","text":"ANY - под условие подходит любое значение","x":1252,"y":270,"width":410,"height":58},
		{"id":"da2f67772562d1dc","type":"text","text":"Exist - находится","x":1662,"y":270,"width":250,"height":60},
		{"id":"fad346ca64ff2b07","type":"text","text":"IN/NOT IN","x":754,"y":268,"width":250,"height":60},
		{"id":"8e3ff329275eb067","type":"text","text":"ALL - под условие подходят все значения","x":1002,"y":268,"width":250,"height":60},
		{"id":"0ec6e54e03885c58","type":"text","text":"Подзапросы","x":368,"y":275,"width":183,"height":50},
		{"id":"336ef7c9d93cd0eb","type":"file","file":"image/exist_example.png","x":1491,"y":400,"width":592,"height":162},
		{"id":"e6bcd857a539baf1","type":"text","text":"Устранение избыточности производится как правило за счёт декомпозиции отношений таким образом, чтобы в каждом отношение хранились только первичные факты ( то есть факта, не выводимые из других хранимых фактов). ","x":-211,"y":205,"width":331,"height":240},
		{"id":"f297750a48d042ad","type":"text","text":"1 НФ","x":-409,"y":780,"width":103,"height":50},
		{"id":"8273a4e325ef25c5","type":"text","text":"2 НФ","x":-283,"y":780,"width":104,"height":50},
		{"id":"d140479de84af718","type":"text","text":"3 НФ","x":-162,"y":780,"width":117,"height":50},
		{"id":"4f0bbbb354318549","type":"text","text":"НФ Бойса-Кодда (усиленная 3 нф)","x":19,"y":780,"width":316,"height":50},
		{"id":"df80fbe8ce117a85","type":"text","text":"4 НФ","x":357,"y":780,"width":115,"height":50},
		{"id":"b11d249ee9790d48","type":"text","text":"5 НФ","x":502,"y":780,"width":115,"height":50},
		{"id":"40d12abee5b90a47","type":"text","text":"- Таблица находится в НФ БК\n- Устраняются многозначные зависимости","x":348,"y":1149,"width":250,"height":157},
		{"id":"f43a7697c76caa44","type":"text","text":"- Таблица в 4 НФ\n- Устраняются нетривиальные зависимости\n- Декомпозиция без потерь","x":655,"y":1149,"width":250,"height":197},
		{"id":"f8c9a36ae00ea6e2","type":"text","text":"### **5NF (Пятая нормальная форма)**\n\n**Условия:**\n\n- Таблица уже в 4NF.\n- Все зависимости между атрибутами представляются через их ключи (нет избыточных зависимостей).\n\n**Пример:**  \nСложные связи между тремя таблицами (например, `Поставщик`, `Товар`, `Клиент`).  \n**Решение:**  \nРазбить связи на независимые компоненты, чтобы каждая таблица отражала только одну зависимость.","x":654,"y":1476,"width":250,"height":698},
		{"id":"f4fbc0555c7d3099","type":"text","text":"- Таблица в 3НФ\n- Ключевые атрибуты не должны зависеть от не ключевых","x":53,"y":1147,"width":250,"height":143},
		{"id":"ab25f9886d33d0de","type":"text","text":"### **BCNF (Нормальная форма Бойса-Кодда)**\n\n**Условия:**\n\n- Таблица уже в 3NF.\n- Каждый детерминант (атрибут, от которого зависят другие) является кандидатом на ключ.\n\n**Пример нарушения:**  \nВ таблице (Преподаватель, Курс, Аудитория) атрибут `Аудитория` зависит от `Преподаватель`, но `Преподаватель` не является ключом.  \n**Решение:**  \nРазделить таблицу, чтобы устранить эту зависимость.","x":52,"y":1476,"width":250,"height":705},
		{"id":"2ae5f2ff4a4f7aa9","type":"text","text":"### **4NF (Четвёртая нормальная форма)**\n\n**Условия:**\n\n- Таблица уже в BCNF.\n- Нет мультизначных зависимостей, когда один атрибут связан с несколькими значениями другого независимо от третьего.\n\n**Пример нарушения:**  \nТаблица хранит поля: `Студент`, `Язык программирования`, `Хобби`. У студента может быть несколько языков и хобби.  \n**Решение:**  \nРазделить таблицу на `Студент-Язык` и `Студент-Хобби`.","x":347,"y":1476,"width":250,"height":691},
		{"id":"b8b819e6860c8045","type":"text","text":"- Таблица в 2 НФ\n- Все атрибуты зависят только от первичного ключа, но не от других атрибутов","x":-245,"y":1149,"width":284,"height":240},
		{"id":"b2b1d52b5e015970","type":"file","file":"image/correlated_under_query.png","x":817,"y":431,"width":619,"height":115},
		{"id":"a2e4e1227ff20ccc","type":"file","file":"image/ogr.png","x":209,"y":431,"width":501,"height":153},
		{"id":"a405e26f162102fe","type":"file","file":"image/Pasted image 20250119173929.png","x":-863,"y":205,"width":400,"height":171},
		{"id":"cc587ba48f7a1ae0","type":"text","text":"CREATE INDEX idx_btree ON table_name (column_name);\n","x":-640,"y":-200,"width":471,"height":56},
		{"id":"5764635fe6220edc","type":"text","text":"Индексы","x":-735,"y":23,"width":144,"height":50},
		{"id":"ee6c96fe4403ba00","type":"text","text":"EXPLAIN","x":-1200,"y":190,"width":138,"height":60},
		{"id":"d09c3637beefafa1","type":"text","text":"- **EXPLAIN**: Показывает план выполнения SQL-запроса, но **не выполняет его**. Используется для анализа, какие индексы и стратегии будут применены.\n    \n- **EXPLAIN ANALYZE**: Выполняет запрос и показывает реальный план выполнения с **фактическими данными** (время выполнения, количество строк и т. д.). Полезно для точного анализа производительности.","x":-1329,"y":380,"width":397,"height":310},
		{"id":"ae1c9f98fa72900b","type":"text","text":"ALTER TABLE users ADD INDEX nameIndex (name);\n","x":-640,"y":-260,"width":471,"height":60},
		{"id":"9b761d69cae707c0","type":"file","file":"image/gradation.png","x":-1090,"y":-745,"width":400,"height":66},
		{"id":"8ea6ca8b1c9a1592","type":"text","text":"Read Uncommitted - транзакции видят результаты других незавершенных транзакций.  Нет в PostgreSQL.","x":-1556,"y":-1060,"width":290,"height":130},
		{"id":"1c7ca8ef9bd123cf","type":"text","text":"Read Committed - параллельно исполняющиеся транзакции видят только зафиксированные изменения из других транзакций. Дефолт в PostgreSQL","x":-1252,"y":-1083,"width":310,"height":153},
		{"id":"62178b5ca0337f7c","type":"text","text":"Repeatable Read - не видны изменения Update and Delete, но видные результаты Insert. Фантомное чтение. В MySQL уровень по умолчанию","x":-922,"y":-1083,"width":287,"height":153},
		{"id":"eecfb78fa65f39de","type":"text","text":"### **Типы блокировок в PostgreSQL** 🚀\n\nPostgreSQL использует **многоверсионную конкуренцию (MVCC)**, но при этом применяет блокировки для защиты данных от одновременного изменения.\n\n---\n\n## 🔹 **1. Блокировки на уровне строк (Row-Level Locks)**\n\nИспользуются для конкурентного обновления строк в таблице.\n\n### **🔸 Row Exclusive Locks (FOR UPDATE, FOR SHARE)**\n\n1. **`SELECT ... FOR UPDATE`**\n    \n    - Блокирует выбранные строки **для изменений другими транзакциями**.\n    - Другие транзакции не могут изменить или удалить заблокированные строки.\n    - Читают, но не изменяют — могут.\n2. **`SELECT ... FOR SHARE`**\n    \n    - Разрешает **другим транзакциям** читать строки, но **запрещает** их изменение или удаление.\n\n🔹 **Пример:**\n\n```sql\nBEGIN;\nSELECT * FROM users WHERE id = 1 FOR UPDATE;\n```\n\n🔹 **Что происходит?**\n\n- Эта строка заблокирована для изменений другими транзакциями.\n- Если другая транзакция попытается выполнить `UPDATE` или `DELETE`, она **ждёт**.\n\n---\n\n## 🔹 **2. Блокировки на уровне таблиц (Table-Level Locks)**\n\nИспользуются при изменении структуры таблицы (`ALTER TABLE` и т. д.).\n\n### **🔸 Основные типы**\n\n|Блокировка|Когда используется?|Другие операции возможны?|\n|---|---|---|\n|`ACCESS SHARE`|`SELECT`|✅ Чтение и запись|\n|`ROW SHARE`|`SELECT ... FOR UPDATE/SHARE`|✅ Чтение|\n|`ROW EXCLUSIVE`|`INSERT, UPDATE, DELETE`|✅ Чтение, но не `ACCESS EXCLUSIVE`|\n|`SHARE UPDATE EXCLUSIVE`|`ANALYZE, VACUUM`|✅ Чтение, но не `EXCLUSIVE`|\n|`SHARE`|`CREATE INDEX`|❌ Запись запрещена|\n|`EXCLUSIVE`|`ALTER TABLE`|❌ Блокирует всё|\n|`ACCESS EXCLUSIVE`|`DROP TABLE, TRUNCATE`|❌ Полная блокировка|\n\n🔹 **Пример:**\n\n```sql\nLOCK TABLE users IN ACCESS EXCLUSIVE MODE;\n```\n\n**🔒 Полностью блокирует таблицу `users` для всех операций.**\n\n---\n\n## 🔹 **3. Advisory Locks (Пользовательские блокировки)**\n\n- Используются для **блокировки не записей БД, а логики приложения**.\n- Полезны для реализации **очередей задач**, **ограничений на конкурентный доступ**.\n\n🔹 **Пример:**\n\n```sql\nSELECT pg_advisory_lock(12345); -- Блокируем ресурс 12345\n```\n\n```sql\nSELECT pg_advisory_unlock(12345); -- Освобождаем блокировку\n```\n\n**🔎 Когда использовать Advisory Locks?**\n\n- Если нужна блокировка **не на уровне БД, а на уровне приложения**.\n- Если хочется избежать **ожидания блокировки таблиц/строк**.\n\n---\n\n## **Вывод** 📌\n\nPostgreSQL предоставляет **гибкую систему блокировок**, которая помогает:\n\n1. **Контролировать конкурентный доступ** (Row-Level Locks).\n2. **Обеспечивать целостность структуры данных** (Table-Level Locks).\n3. **Реализовывать сложную логику блокировок** (Advisory Locks).\n\n✅ **Выбор зависит от типа операции и требуемой конкурентности.** 🚀","x":-1719,"y":-3320,"width":1104,"height":2100},
		{"id":"b36f008ebce02f59","type":"text","text":"начинается со слова Begin/ START TRANSACTION","x":-177,"y":-721,"width":265,"height":81},
		{"id":"56b211ae9d1ab26a","type":"text","text":"Заканчивается Commit","x":-170,"y":-821,"width":250,"height":60},
		{"id":"07cf2ec44927c3b4","type":"text","text":"ROLLBACK TO savepoint_name;\n","x":-192,"y":-955,"width":296,"height":50},
		{"id":"55160f8ada121e7c","type":"text","text":"SAVEPOINT savepoint_name","x":-192,"y":-905,"width":296,"height":50},
		{"id":"9c39ad78d598551a","type":"text","text":"Rollback - для отката изменений","x":-170,"y":-1057,"width":250,"height":60},
		{"id":"ffdaa58e564a50e0","type":"file","file":"image/cap_sql.png","x":138,"y":-1167,"width":561,"height":191},
		{"id":"ebf8b29ff0b547a9","type":"text","text":"В распределённой системе невозможно одновременно гарантировать все три свойства:  \n**C**, **A** и **P**. Можно добиться только двух из трёх","x":176,"y":-857,"width":484,"height":103},
		{"id":"b74e96bf1254f912","type":"text","text":"ACID - требования к транзакционной системе(гарантии)","x":243,"y":-499,"width":250,"height":74},
		{"id":"2da8f9835b9ddfba","type":"text","text":"Гарантирует, что никакая транзакция не будет зафиксирована в системе частично. Будут либо выполнены все операции, либо не выполнено ни одной","x":899,"y":-988,"width":250,"height":211},
		{"id":"9d9e2a2383656cac","type":"text","text":"Каждая успешная транзакция по определению фиксирует только допустимые результаты","x":899,"y":-765,"width":250,"height":158},
		{"id":"7b2d769a6c3d6393","type":"text","text":"Во время выполнения параллельные транзакции не должны оказывать внимания на её результаты","x":899,"y":-595,"width":250,"height":156},
		{"id":"76db9a847c21d82f","type":"text","text":"Помогает WAL (Write Ahead Log), который записывает изменения в журнал изменений. В случае проблем - запись восстанавливается из WAL","x":1265,"y":-426,"width":280,"height":180},
		{"id":"ecf2b0aa36686276","type":"text","text":"Изменения сделанные успешно завершённой транзакцией, должны остаться сохраненными после возвращения системы в работу","x":903,"y":-425,"width":250,"height":178},
		{"id":"0c86f224ce8b0f6a","type":"text","text":"Atomicity - атомарность","x":565,"y":-667,"width":250,"height":60},
		{"id":"92d319ac205a84bd","type":"text","text":"Consistency - согласованность","x":565,"y":-587,"width":250,"height":60},
		{"id":"542969f97d3609cb","type":"text","text":"Isolation - изолированность","x":565,"y":-505,"width":250,"height":60},
		{"id":"212448db1160181a","type":"text","text":"Durability - стойкость","x":565,"y":-427,"width":250,"height":60},
		{"id":"481e0a44ae5fb627","type":"file","file":"image/isliation_levels.png","x":-1439,"y":-560,"width":549,"height":180},
		{"id":"daeb7db3e357d16d","type":"file","file":"image/type_of_scan.png","x":-1684,"y":983,"width":622,"height":498},
		{"id":"1e4d10d28f9e9358","type":"text","text":"типы индексов","x":-1439,"y":19,"width":193,"height":65},
		{"id":"154bf7e8a31a06d2","type":"text","text":"SQL","x":-1619,"y":27,"width":130,"height":50},
		{"id":"58ce73bd18fb465f","type":"text","text":"NoSQL","x":-1614,"y":91,"width":125,"height":50},
		{"id":"16481ee5443852bd","type":"text","text":" MongoDB","x":-1874,"y":376,"width":154,"height":52},
		{"id":"e5920b9abeba15f6","type":"text","text":"Поддержка различных типов индексов (B-Tree, TTL, уникальные)","x":-2247,"y":336,"width":280,"height":132},
		{"id":"bb02bb1fe7034b19","type":"text","text":"Основаны на инвертированном индексе","x":-2247,"y":492,"width":280,"height":87},
		{"id":"a7a5fbb772b76ce8","type":"text","text":"Elasticsearch","x":-1874,"y":509,"width":154,"height":52},
		{"id":"a5878a2d54e31716","type":"text","text":"Clustered Index","x":-2303,"y":-403,"width":214,"height":60},
		{"id":"282d6dba3b6cb382","type":"text","text":"Non-Clustered Index","x":-2303,"y":-343,"width":214,"height":60},
		{"id":"a431ab3f408d6d01","type":"text","text":"Composite Index","x":-2303,"y":-459,"width":214,"height":60},
		{"id":"ac4fdba60fdec4b9","type":"text","text":"Covering Index","x":-2303,"y":-519,"width":214,"height":60},
		{"id":"4e3a8f2c7e40fa09","type":"text","text":"По назначению:","x":-2321,"y":-579,"width":250,"height":60},
		{"id":"4ad1dfb384039067","type":"text","text":"Специализированные:","x":-2321,"y":-283,"width":250,"height":60},
		{"id":"c50fd2bdfa857123","type":"text","text":"Partial Index","x":-2303,"y":-224,"width":214,"height":67},
		{"id":"43428008506581cd","type":"text","text":"Spatial Index","x":-2303,"y":-157,"width":214,"height":67},
		{"id":"7b9074c92ffc9820","type":"text","text":"Full-Text Index","x":-2303,"y":-91,"width":214,"height":67},
		{"id":"8289e01b80a7c21d","type":"text","text":"Non-Unique Index","x":-2303,"y":-639,"width":214,"height":60},
		{"id":"d3c570e488ac5a1e","type":"text","text":"Unique Index","x":-2303,"y":-699,"width":214,"height":60},
		{"id":"67b28ee27082b071","type":"text","text":"Primary Index","x":-2303,"y":-759,"width":214,"height":60},
		{"id":"6cc4395d60c4d7d0","type":"text","text":"По функциональности:","x":-2321,"y":-819,"width":250,"height":60},
		{"id":"fb33becb4a4447e2","type":"text","text":"Виды индексов:","x":-2321,"y":-1173,"width":250,"height":59},
		{"id":"9c25dfedf434c327","type":"text","text":"BRIN","x":-2303,"y":-877,"width":214,"height":59},
		{"id":"163cd0acaa8431d7","type":"text","text":"GIN","x":-2303,"y":-936,"width":214,"height":59},
		{"id":"7a40dc415e3a68ba","type":"text","text":"GiST","x":-2303,"y":-995,"width":214,"height":59},
		{"id":"ad4305d0ab5162f9","type":"text","text":"Hash индексы","x":-2303,"y":-1053,"width":214,"height":59},
		{"id":"acfa32adb940aab3","type":"text","text":"B-Tree","x":-2303,"y":-1113,"width":214,"height":60},
		{"id":"706dd305e5e0e478","type":"text","text":"Бит-мап индекс","x":-2303,"y":-24,"width":214,"height":60},
		{"id":"e8172f5d326abbe8","type":"text","text":"Функциональный","x":-2303,"y":36,"width":214,"height":60},
		{"id":"4e74843ff816a2c1","type":"text","text":"Включает все столбцы, необходимые для запроса","x":-3040,"y":-849,"width":276,"height":60},
		{"id":"4d04e1e1dea43553","type":"text","text":"Очередность составляется по селективности.\n**Ключи берутся до первого неравенства**","x":-3039,"y":-784,"width":275,"height":140},
		{"id":"06c2612df2172404","type":"text","text":"Проиндексированное значение хранится вместе с данными.","x":-3039,"y":-634,"width":275,"height":115},
		{"id":"e69fcf18d2feba7c","type":"text","text":"### **B-Tree кратко и просто**\n\n🔹 **Что это?**  \nB-Tree — это **самобалансирующееся дерево поиска**, где **один узел хранит несколько ключей**.\n\n🔹 **Как работает?**\n\n- **Поиск**: как бинарный, но внутри узла (O(log N)).\n- **Вставка**: добавляем в узел, если он полон → **разделяем**.\n- **Удаление**: если узел пустеет → **объединяем**.\n- **Балансировка** встроена, глубина минимальна.\n\n🔹 **Где используется?**  \n📌 **Базы данных** (MySQL, PostgreSQL)  \n📌 **Файловые системы** (NTFS, ext4)\n\n💡 **Главное**: B-Tree ускоряет поиск, вставку и удаление в **больших структурах данных**! 🚀","x":-3325,"y":-1393,"width":558,"height":514},
		{"id":"2030632f023d2348","type":"text","text":"### используется для большинства индексов по умолчанию","x":-3265,"y":-1473,"width":456,"height":80},
		{"id":"4ac8065d6b7495cc","type":"file","file":"image/B-Tree.png","x":-4160,"y":-1238,"width":622,"height":204},
		{"id":"a9e0fc95a63e9e30","type":"file","file":"image/b-tree_example.png","x":-4217,"y":-965,"width":679,"height":500},
		{"id":"8908aa8371ca1f3c","type":"text","text":"-- Обычный B-Tree индекс\nCREATE INDEX idx_btree ON table_name (column_name);\n\n-- Составной (композитный) B-Tree индекс\nCREATE INDEX idx_composite ON table_name (column1, column2, column3);\n\n-- Уникальный индекс\nCREATE UNIQUE INDEX idx_unique ON table_name (column_name);\n\n-- Покрывающий индекс (PostgreSQL 11+)\nCREATE INDEX idx_covering ON table_name (column1) INCLUDE (column2, column3);\n\n-- Полнотекстовый индекс (GIN)\nCREATE INDEX idx_fulltext ON table_name USING GIN (to_tsvector('english', text_column));\n\n-- Хэш-индекс\nCREATE INDEX idx_hash ON table_name USING HASH (column_name);\n\n-- Функциональный индекс\nCREATE INDEX idx_functional ON table_name ((LOWER(column_name)));\n\n-- Геоиндекс (PostGIS)\nCREATE INDEX idx_geo ON table_name USING GIST (geom_column);\n\n-- Битмап-индекс (эмуляция через GIN, т.к. в PostgreSQL битмап-индексов нет)\nCREATE INDEX idx_bitmap_emul ON table_name USING GIN (column_name);\n","x":-4163,"y":-284,"width":572,"height":778},
		{"id":"9a592841809a7b5d","type":"text","text":"### Команды создания","x":-4021,"y":-354,"width":288,"height":70},
		{"id":"129a3c7ed1d89fcf","type":"text","text":"Проиндексированные значения и данные храняться отдельно(указатели).","x":-3039,"y":-500,"width":275,"height":124},
		{"id":"56b303378ea7599c","type":"text","text":"Для геометрических данных","x":-3038,"y":-177,"width":273,"height":60},
		{"id":"1e5bc167b55d63ff","type":"text","text":"Индексирует слова внутри текстовых полей","x":-3038,"y":-103,"width":273,"height":60},
		{"id":"a64450b1121871a8","type":"text","text":"Индекс создается только для строк, удовлетворяющих определенному условию","x":-3035,"y":-305,"width":273,"height":122},
		{"id":"571a082841120edb","type":"text","text":"Индексируется не значение поля, а результат выражения или функции","x":-3035,"y":86,"width":271,"height":114},
		{"id":"256566eccb3ca5d5","type":"text","text":"Хранит значения индекса как битовые карты","x":-3032,"y":-24,"width":270,"height":92},
		{"id":"92a328272dab97ae","type":"text","text":"SPGiST","x":-2553,"y":-994,"width":250,"height":60},
		{"id":"9e2d220cbce51996","type":"text","text":"### **Balanced tree**","x":-3151,"y":-1541,"width":228,"height":68},
		{"id":"f0f99b6b46279b73","type":"text","text":"- **Hash (хеш-таблицы, hash index):**  \n    Быстрый доступ по _точному ключу_. O(1) поиск. Не подходит для диапазонных запросов или сортировки.  \n    🔹 Используй, когда нужны только точечные запросы: `WHERE id = 5`.\n    \n- **B-Tree:**  \n    Поддерживает _упорядоченные данные_. O(log n) поиск. Отлично для диапазонов, сортировки, префиксного поиска.  \n    🔹 Используй, когда нужны диапазоны: `WHERE age BETWEEN 20 AND 30` или `ORDER BY name`.","x":-2735,"y":-1713,"width":539,"height":320},
		{"id":"00d606c0e93376f9","type":"text","text":"селективность - доля строк, которые удовлетворяют условию запроса","x":-1600,"y":-90,"width":354,"height":66},
		{"id":"762f5b31c60e6999","type":"text","text":"Много индексов - \"-\":\n\n- Тяжёлые INSERT/UPDATE/DELETE\n- Занимают много места\n- Не всегда используются\n- Сложнее обслуживать(Больше времени на реиндексацию, бэкапы, анализ)\n","x":-1707,"y":-339,"width":576,"height":225},
		{"id":"c11ab287fe8b78d7","type":"text","text":"SELECT * FROM pg_indexes;\n","x":-980,"y":-260,"width":300,"height":60},
		{"id":"d0a0fc77c9fc73f1","type":"text","text":"Serializable - самый высокий и тяжелый уровень изоляции. Блокирует чтение - транзакции выполняются последовательно.","x":-600,"y":-1078,"width":315,"height":148},
		{"id":"bff9986d57c9665c","type":"text","text":"Non-repeatable Read/Неповторяющиеся чтение","x":763,"y":-180,"width":271,"height":94},
		{"id":"feb435b209b91f2c","type":"text","text":"lost update","x":460,"y":-163,"width":250,"height":60},
		{"id":"82da0c07dcfc0874","type":"text","text":"Аномалии","x":216,"y":-158,"width":152,"height":51},
		{"id":"c7171379c7ee8d47","type":"text","text":"В рамках одной транзакции один и тот же запрос к одной и той же строке возвращает разные результаты.","x":763,"y":-86,"width":451,"height":99},
		{"id":"ced58b166dead181","type":"text","text":"Phantom Read/Фантомное чтение","x":335,"y":-66,"width":250,"height":60},
		{"id":"941cc201c5d4d3cf","type":"text","text":"В рамках одной транзакции меняется набор строк, подходящих под условие.","x":335,"y":-6,"width":382,"height":66},
		{"id":"db64c4b6f536e4a5","type":"text","text":"Транзакция читает неподтверждённые данные из другой транзакции.","x":347,"y":-276,"width":359,"height":60},
		{"id":"ba7d70e49e21b663","type":"text","text":"Dirty Read/Грязное чтение","x":347,"y":-336,"width":280,"height":60},
		{"id":"0f1ac5e1d39be336","type":"text","text":"Можно жить с грязными данными, главное — быстро.","x":-1562,"y":-1138,"width":296,"height":78},
		{"id":"a82da66717fa9d22","type":"text","text":"Базы по умолчанию. Нет грязного чтения, достаточная скорость.","x":-1255,"y":-1161,"width":316,"height":78},
		{"id":"040856d0dc197d4f","type":"text","text":"Нельзя, чтобы строки \"менялись\" в транзакции.","x":-920,"y":-1161,"width":283,"height":78},
		{"id":"7706d307e4f1588c","type":"text","text":"Максимальная надёжность. Ошибки недопустимы. Лучше потерять скорость, чем данные.","x":-600,"y":-1171,"width":315,"height":93},
		{"id":"bf7454c7790d9aff","type":"text","text":"1. **Посмотреть EXPLAIN (ANALYZE)**\n    \n    - Где узкое место? Seq Scan? Nested Loop? Большие затраты на сортировку?\n        \n2. **Проверить индексы**\n    \n    - Есть ли нужный индекс?\n        \n    - Правильно ли он используется?\n        \n    - Может помочь покрывающий индекс (все нужные поля в индексе).\n        \n3. **Проверить селективность условий**\n    \n    - Если фильтр малоселективный → индекс не спасёт.\n        \n    - Возможно, переписать запрос или индексировать другой столбец.\n        \n4. **Рефакторинг запроса**\n    \n    - Убрать подзапросы → заменить на JOIN.\n        \n    - Разбить сложный запрос на несколько простых.\n        \n    - Избежать `SELECT *` — выбери только нужные поля.\n        \n5. **Материализованные представления или кэш**\n    \n    - Если запрос дорогой и часто повторяется → сохраняй результат.\n        \n    - Используй Redis, готовые таблицы или реплики для чтения.\n        \n6. **Параметры базы**\n    \n    - Увеличить work_mem, parallel_workers, tune autovacuum.\n        \n    - Возможно, включить/отключить parallel query.\n        \n7. **Пересборка статистики (ANALYZE)**\n    \n    - Планировщик может ошибаться, если статистика устарела.\n        \n8. **Пересмотреть архитектуру**\n    \n    - Декомпозиция таблицы.\n        \n    - Денормализация.\n        \n    - Шардинг.","x":-2640,"y":983,"width":843,"height":737}
	],
	"edges":[
		{"id":"2cfdf28a55366246","fromNode":"a0fe698beb417a32","fromSide":"top","toNode":"469832dafe8782a6","toSide":"bottom"},
		{"id":"ebf9dec686aabaf8","fromNode":"469832dafe8782a6","fromSide":"top","toNode":"f5fb75025667c7c5","toSide":"bottom"},
		{"id":"ac26b4f981369c03","fromNode":"f5fb75025667c7c5","fromSide":"top","toNode":"b36f008ebce02f59","toSide":"bottom"},
		{"id":"f140b8c0fe5a760c","fromNode":"b36f008ebce02f59","fromSide":"top","toNode":"56b211ae9d1ab26a","toSide":"bottom"},
		{"id":"4fd3b451475ced9b","fromNode":"469832dafe8782a6","fromSide":"right","toNode":"82da0c07dcfc0874","toSide":"left"},
		{"id":"2501b6ef15042068","fromNode":"82da0c07dcfc0874","fromSide":"top","toNode":"ba7d70e49e21b663","toSide":"left"},
		{"id":"e0ad9e4d39f44fbe","fromNode":"82da0c07dcfc0874","fromSide":"right","toNode":"feb435b209b91f2c","toSide":"left"},
		{"id":"1f8d7ada721b1788","fromNode":"82da0c07dcfc0874","fromSide":"bottom","toNode":"ced58b166dead181","toSide":"left"},
		{"id":"566bb252bb4bb7ba","fromNode":"feb435b209b91f2c","fromSide":"right","toNode":"bff9986d57c9665c","toSide":"left"},
		{"id":"bfde903cffbae6d2","fromNode":"e6bcd857a539baf1","fromSide":"bottom","toNode":"f297750a48d042ad","toSide":"top"},
		{"id":"6cde04ea9fed65b6","fromNode":"e6bcd857a539baf1","fromSide":"bottom","toNode":"8273a4e325ef25c5","toSide":"top"},
		{"id":"d3ed366aabd58dd9","fromNode":"e6bcd857a539baf1","fromSide":"bottom","toNode":"d140479de84af718","toSide":"top"},
		{"id":"ab88d11f48d80a3f","fromNode":"e6bcd857a539baf1","fromSide":"bottom","toNode":"4f0bbbb354318549","toSide":"top"},
		{"id":"3cc11ef54b9ed508","fromNode":"e6bcd857a539baf1","fromSide":"bottom","toNode":"df80fbe8ce117a85","toSide":"top"},
		{"id":"41543c0c2fa3e562","fromNode":"e6bcd857a539baf1","fromSide":"bottom","toNode":"b11d249ee9790d48","toSide":"top"},
		{"id":"e3c80ccd398fe83f","fromNode":"a0fe698beb417a32","fromSide":"left","toNode":"5764635fe6220edc","toSide":"right","label":"индексы"},
		{"id":"34256c6ba09875ae","fromNode":"5764635fe6220edc","fromSide":"top","toNode":"cc587ba48f7a1ae0","toSide":"bottom","label":"добавление"},
		{"id":"46d5012a76be37f0","fromNode":"5764635fe6220edc","fromSide":"top","toNode":"c11ab287fe8b78d7","toSide":"bottom","label":"список index"},
		{"id":"d702e674cd0f6207","fromNode":"5764635fe6220edc","fromSide":"bottom","toNode":"ee6c96fe4403ba00","toSide":"top","label":"Какие индексы используются для этого запроса?"},
		{"id":"1c01c10ba48e081e","fromNode":"5764635fe6220edc","fromSide":"bottom","toNode":"a405e26f162102fe","toSide":"top"},
		{"id":"d6070fad8eeef731","fromNode":"ee6c96fe4403ba00","fromSide":"bottom","toNode":"d09c3637beefafa1","toSide":"top"},
		{"id":"244854c2641454e8","fromNode":"f5fb75025667c7c5","fromSide":"right","toNode":"b74e96bf1254f912","toSide":"left","label":"ACID"},
		{"id":"d842ceb3d3933a7e","fromNode":"b74e96bf1254f912","fromSide":"right","toNode":"0c86f224ce8b0f6a","toSide":"left"},
		{"id":"7d742395742ed6ca","fromNode":"b74e96bf1254f912","fromSide":"right","toNode":"92d319ac205a84bd","toSide":"left"},
		{"id":"62d8f715c728fb33","fromNode":"b74e96bf1254f912","fromSide":"right","toNode":"542969f97d3609cb","toSide":"left"},
		{"id":"f73a80b7f9923706","fromNode":"b74e96bf1254f912","fromSide":"right","toNode":"212448db1160181a","toSide":"left"},
		{"id":"d517820a629cf9b4","fromNode":"0c86f224ce8b0f6a","fromSide":"top","toNode":"2da8f9835b9ddfba","toSide":"left"},
		{"id":"e64b02354f660b91","fromNode":"92d319ac205a84bd","fromSide":"right","toNode":"9d9e2a2383656cac","toSide":"left"},
		{"id":"385a8966eecfe4e9","fromNode":"542969f97d3609cb","fromSide":"right","toNode":"7b2d769a6c3d6393","toSide":"left"},
		{"id":"61cebb72bf04f66e","fromNode":"212448db1160181a","fromSide":"right","toNode":"ecf2b0aa36686276","toSide":"left"},
		{"id":"86c055f724238c2b","fromNode":"f5fb75025667c7c5","fromSide":"left","toNode":"52478aa6d1adabb2","toSide":"right"},
		{"id":"88e1822bcd71f41a","fromNode":"ecf2b0aa36686276","fromSide":"right","toNode":"76db9a847c21d82f","toSide":"left"},
		{"id":"6663c457d955565a","fromNode":"f5fb75025667c7c5","fromSide":"right","toNode":"ebf8b29ff0b547a9","toSide":"bottom","label":"CAP"},
		{"id":"bdc39d0e076833e7","fromNode":"9c39ad78d598551a","fromSide":"top","toNode":"eecfb78fa65f39de","toSide":"right","label":"ВИДЫ БЛОКИРОВОК"},
		{"id":"a6daa329f3097dc9","fromNode":"7fd725a8258ecf9e","fromSide":"bottom","toNode":"4b373b7746565595","toSide":"top","label":"подробно"},
		{"id":"c88cd4868ceff187","fromNode":"f297750a48d042ad","fromSide":"bottom","toNode":"7fd725a8258ecf9e","toSide":"top"},
		{"id":"11f48a097a530173","fromNode":"8273a4e325ef25c5","fromSide":"bottom","toNode":"c1162d78566f266a","toSide":"top"},
		{"id":"e8399d378a359bc6","fromNode":"c1162d78566f266a","fromSide":"bottom","toNode":"574145004b39b13f","toSide":"top","label":"подробно"},
		{"id":"b73c60f9ab449dde","fromNode":"d140479de84af718","fromSide":"bottom","toNode":"b8b819e6860c8045","toSide":"top"},
		{"id":"5f451c0fb332ad97","fromNode":"b8b819e6860c8045","fromSide":"bottom","toNode":"b74fec7acc5df663","toSide":"top","label":"подробно"},
		{"id":"31915313db52bc52","fromNode":"4f0bbbb354318549","fromSide":"bottom","toNode":"f4fbc0555c7d3099","toSide":"top"},
		{"id":"073093444ba6a289","fromNode":"df80fbe8ce117a85","fromSide":"bottom","toNode":"40d12abee5b90a47","toSide":"top"},
		{"id":"0f8dc262cd43f077","fromNode":"b11d249ee9790d48","fromSide":"bottom","toNode":"f43a7697c76caa44","toSide":"top"},
		{"id":"b6b4efaeb0a44278","fromNode":"f4fbc0555c7d3099","fromSide":"bottom","toNode":"ab25f9886d33d0de","toSide":"top","label":"подробно"},
		{"id":"a1ca8d0dbb85c158","fromNode":"40d12abee5b90a47","fromSide":"bottom","toNode":"2ae5f2ff4a4f7aa9","toSide":"top","label":"подробно"},
		{"id":"f006ad0d27fe0076","fromNode":"f43a7697c76caa44","fromSide":"bottom","toNode":"f8c9a36ae00ea6e2","toSide":"top","label":"подробно"},
		{"id":"0895b1f9dac3b917","fromNode":"a0fe698beb417a32","fromSide":"right","toNode":"b4936404c3d29275","toSide":"left"},
		{"id":"31aaff00900c77f2","fromNode":"a0fe698beb417a32","fromSide":"right","toNode":"0ec6e54e03885c58","toSide":"left"},
		{"id":"961bb73686d3edb4","fromNode":"0ec6e54e03885c58","fromSide":"right","toNode":"fad346ca64ff2b07","toSide":"left"},
		{"id":"dfeacd2e49c24b6e","fromNode":"b4936404c3d29275","fromSide":"right","toNode":"9e0f3ad20c6807da","toSide":"left"},
		{"id":"4feedcc2ed848100","fromNode":"b4936404c3d29275","fromSide":"top","toNode":"482f41e7e3e39729","toSide":"bottom"},
		{"id":"af919f8d2c3d10bb","fromNode":"da2f67772562d1dc","fromSide":"bottom","toNode":"336ef7c9d93cd0eb","toSide":"top"},
		{"id":"2ccbb0870830d8ff","fromNode":"0ec6e54e03885c58","fromSide":"bottom","toNode":"b2b1d52b5e015970","toSide":"top","label":"коррелированные "},
		{"id":"f907b5db78ec7213","fromNode":"0ec6e54e03885c58","fromSide":"bottom","toNode":"a2e4e1227ff20ccc","toSide":"top","label":"ограничения"},
		{"id":"0658d5aee60dcec2","fromNode":"a0fe698beb417a32","fromSide":"bottom","toNode":"e6bcd857a539baf1","toSide":"top","label":"Формы/нормализации"},
		{"id":"6e12ffe380d51bbc","fromNode":"52478aa6d1adabb2","fromSide":"top","toNode":"9b761d69cae707c0","toSide":"bottom"},
		{"id":"198bb4c86f5bd52b","fromNode":"9b761d69cae707c0","fromSide":"top","toNode":"8ea6ca8b1c9a1592","toSide":"bottom"},
		{"id":"6212f34ea854c6f2","fromNode":"9b761d69cae707c0","fromSide":"top","toNode":"1c7ca8ef9bd123cf","toSide":"bottom"},
		{"id":"5d884a97bfd7a37f","fromNode":"9b761d69cae707c0","fromSide":"top","toNode":"62178b5ca0337f7c","toSide":"bottom","label":"default"},
		{"id":"11faccadd89a0dd4","fromNode":"9b761d69cae707c0","fromSide":"top","toNode":"d0a0fc77c9fc73f1","toSide":"bottom"},
		{"id":"6205dc851143ce2b","fromNode":"ebf8b29ff0b547a9","fromSide":"top","toNode":"ffdaa58e564a50e0","toSide":"bottom"},
		{"id":"a4ed5e972597daf4","fromNode":"56b211ae9d1ab26a","fromSide":"top","toNode":"55160f8ada121e7c","toSide":"bottom"},
		{"id":"0601ccd1349f4221","fromNode":"07cf2ec44927c3b4","fromSide":"top","toNode":"9c39ad78d598551a","toSide":"bottom"},
		{"id":"0db9432fe28ad9f5","fromNode":"52478aa6d1adabb2","fromSide":"left","toNode":"481e0a44ae5fb627","toSide":"right"},
		{"id":"81f9522d6671bc2e","fromNode":"d09c3637beefafa1","fromSide":"bottom","toNode":"daeb7db3e357d16d","toSide":"top"},
		{"id":"af2469306990a97b","fromNode":"1e4d10d28f9e9358","fromSide":"left","toNode":"154bf7e8a31a06d2","toSide":"right"},
		{"id":"482090cac882cc10","fromNode":"1e4d10d28f9e9358","fromSide":"left","toNode":"58ce73bd18fb465f","toSide":"right"},
		{"id":"e35871f47f85d984","fromNode":"58ce73bd18fb465f","fromSide":"left","toNode":"16481ee5443852bd","toSide":"right"},
		{"id":"38946d735cd89920","fromNode":"58ce73bd18fb465f","fromSide":"left","toNode":"a7a5fbb772b76ce8","toSide":"right"},
		{"id":"501dfdf6ed0744a5","fromNode":"a7a5fbb772b76ce8","fromSide":"left","toNode":"bb02bb1fe7034b19","toSide":"right"},
		{"id":"5910691291a8e80e","fromNode":"16481ee5443852bd","fromSide":"left","toNode":"e5920b9abeba15f6","toSide":"right"},
		{"id":"05d26151383d20a2","fromNode":"5764635fe6220edc","fromSide":"left","toNode":"1e4d10d28f9e9358","toSide":"right"},
		{"id":"e557d8bbd729c0ee","fromNode":"a431ab3f408d6d01","fromSide":"left","toNode":"4d04e1e1dea43553","toSide":"right"},
		{"id":"1f2cfaf27e203ef4","fromNode":"ac4fdba60fdec4b9","fromSide":"left","toNode":"4e74843ff816a2c1","toSide":"right"},
		{"id":"10bca4efee32abcb","fromNode":"a5878a2d54e31716","fromSide":"left","toNode":"06c2612df2172404","toSide":"right"},
		{"id":"ff250bd3d77846bf","fromNode":"282d6dba3b6cb382","fromSide":"left","toNode":"129a3c7ed1d89fcf","toSide":"right"},
		{"id":"88f7a7a7cf078194","fromNode":"7b9074c92ffc9820","fromSide":"left","toNode":"1e5bc167b55d63ff","toSide":"right"},
		{"id":"6e2a4512d86349b5","fromNode":"c50fd2bdfa857123","fromSide":"left","toNode":"a64450b1121871a8","toSide":"right"},
		{"id":"753b0f5b2c635cab","fromNode":"43428008506581cd","fromSide":"left","toNode":"56b303378ea7599c","toSide":"right"},
		{"id":"f9d8e4b958434344","fromNode":"e69fcf18d2feba7c","fromSide":"left","toNode":"4ac8065d6b7495cc","toSide":"right"},
		{"id":"c769466712db2a50","fromNode":"706dd305e5e0e478","fromSide":"left","toNode":"256566eccb3ca5d5","toSide":"right"},
		{"id":"3f9fa68172a55b6c","fromNode":"e8172f5d326abbe8","fromSide":"left","toNode":"571a082841120edb","toSide":"right"},
		{"id":"771e0aed55011d81","fromNode":"154bf7e8a31a06d2","fromSide":"left","toNode":"fb33becb4a4447e2","toSide":"right"},
		{"id":"6a44c2fb6df896c0","fromNode":"154bf7e8a31a06d2","fromSide":"left","toNode":"6cc4395d60c4d7d0","toSide":"right"},
		{"id":"6d52403244085965","fromNode":"154bf7e8a31a06d2","fromSide":"left","toNode":"4e3a8f2c7e40fa09","toSide":"right"},
		{"id":"b86d934049934c6a","fromNode":"154bf7e8a31a06d2","fromSide":"left","toNode":"4ad1dfb384039067","toSide":"right"},
		{"id":"f42edd809c6e9f97","fromNode":"acfa32adb940aab3","fromSide":"left","toNode":"e69fcf18d2feba7c","toSide":"right"},
		{"id":"25943e384d0f1631","fromNode":"4d04e1e1dea43553","fromSide":"left","toNode":"a9e0fc95a63e9e30","toSide":"right"},
		{"id":"26959d9579e4ef8a","fromNode":"acfa32adb940aab3","fromSide":"left","toNode":"f0f99b6b46279b73","toSide":"bottom"},
		{"id":"10e97ccde50ed212","fromNode":"ad4305d0ab5162f9","fromSide":"left","toNode":"f0f99b6b46279b73","toSide":"bottom"},
		{"id":"abd0a6a28c533358","fromNode":"5764635fe6220edc","fromSide":"left","toNode":"00d606c0e93376f9","toSide":"right"},
		{"id":"7f991308cc840101","fromNode":"5764635fe6220edc","fromSide":"left","toNode":"762f5b31c60e6999","toSide":"right"},
		{"id":"4f40fad3108bf249","fromNode":"d09c3637beefafa1","fromSide":"bottom","toNode":"bf7454c7790d9aff","toSide":"top","label":"Решение"}
	]
}